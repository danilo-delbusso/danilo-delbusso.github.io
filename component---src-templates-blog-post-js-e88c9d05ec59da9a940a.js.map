{"version":3,"sources":["webpack:///./src/css/bio.module.css","webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js","webpack:///./src/css/blog-post.module.css"],"names":["module","exports","Bio","data","site","siteMetadata","author","social","className","bioStyles","container","fixed","avatar","childImageSharp","alt","name","profilePic","description","firstName","href","github","pageQuery","BlogPostTemplate","pageContext","post","markdownRemark","previous","next","title","frontmatter","excerpt","blogPostStyles","article","date","dangerouslySetInnerHTML","__html","html","cta","target","rel","twitter","fields","slug","hr","navList","to"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,WAAa,gCAAgC,YAAc,mC,ygEC+CzGC,EA3CH,WACV,IAAMC,EAAI,OADM,EAwBWA,EAAKC,KAAKC,aAA7BC,EAxBQ,EAwBRA,OAAQC,EAxBA,EAwBAA,OAChB,OACE,yBAAKC,UAAWC,IAAUC,WACxB,kBAAC,IAAD,CACEC,MAAOR,EAAKS,OAAOC,gBAAgBF,MACnCG,IAAKR,EAAOS,KACZP,UAAWC,IAAUO,aAEvB,uBAAGR,UAAWC,IAAUQ,aAAxB,WACWX,EAAOY,UADlB,kJAG4B,IAC1B,uBAAGC,KAAI,sBAAwBZ,EAAOa,QAAtC,aAJF,qD,6CCuCOC,G,UAFEC,UA/DU,SAAC,GAA2B,IAAzBnB,EAAwB,EAAxBA,KAAMoB,EAAkB,EAAlBA,YAC1BC,EAAOrB,EAAKsB,eACVlB,EAAWJ,EAAKC,KAAKC,aAArBE,OACAmB,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOJ,EAAKK,YAAYD,MACxBX,YAAaO,EAAKK,YAAYZ,aAAeO,EAAKM,UAEpD,6BAAStB,UAAU,gBACjB,yBAAKA,UAAU,aACb,6BAASA,UAAWuB,IAAeC,SACjC,gCACE,4BAAKR,EAAKK,YAAYD,OACtB,+BAAQJ,EAAKK,YAAYI,OAE3B,6BAASC,wBAAyB,CAAEC,OAAQX,EAAKY,QACjD,yBAAK5B,UAAWuB,IAAeM,KAC7B,uBACEC,OAAO,SACPC,IAAI,sBACJpB,KAAI,yCAA2CK,EAAKK,YAAYD,MAA5D,QAAyErB,EAAOiC,QAAhF,+CAAsIhB,EAAKiB,OAAOC,MAHxJ,oBAOA,uBACEvB,KAAI,oEAAiFK,EAAKiB,OAAOC,KAA7F,aADN,mBAMF,wBAAIlC,UAAWuB,IAAeY,KAC9B,gCACE,kBAAC,EAAD,SAKN,yBAAKnC,UAAU,aACb,wBAAIA,UAAWuB,IAAea,SAC5B,4BACGlB,GACC,kBAAC,OAAD,CAAMmB,GAAInB,EAASe,OAAOC,KAAMH,IAAI,QAApC,KACKb,EAASG,YAAYD,QAI9B,4BACGD,GACC,kBAAC,OAAD,CAAMkB,GAAIlB,EAAKc,OAAOC,KAAMH,IAAI,QAC7BZ,EAAKE,YAAYD,MADpB,YAcM,c,qBC3EtB5B,EAAOC,QAAU,CAAC,QAAU,mCAAmC,IAAM,+BAA+B,GAAK,8BAA8B,QAAU","file":"component---src-templates-blog-post-js-e88c9d05ec59da9a940a.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"bio-module--container--3BI23\",\"profilePic\":\"bio-module--profilePic--2HJtC\",\"description\":\"bio-module--description--_DoVl\"};","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport bioStyles from \"../css/bio.module.css\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.png/\" }) {\n        childImageSharp {\n          fixed(width: 60, height: 60) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            firstName\n            lastName\n          }\n          social {\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div className={bioStyles.container}>\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author.name}\n        className={bioStyles.profilePic}\n      />\n      <p className={bioStyles.description}>\n        Hi! I'm {author.firstName}. I'm a software engineer, and I work hard to\n        provide helpful and highly intuitive content for free. If you like what\n        you read, please consider{\" \"}\n        <a href={`https://github.com/${social.github}`}>following</a> me on\n        Github. Hope to see you again next time!\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport blogPostStyles from \"../css/blog-post.module.css\"\nimport \"../css/prism-rainforest.css\"\n\nconst GITHUB_USERNAME = \"danilo-delbusso\"\nconst REPO_NAME = \"blog\"\n\nconst BlogPostTemplate = ({ data, pageContext }) => {\n  const post = data.markdownRemark\n  const { social } = data.site.siteMetadata\n  const { previous, next } = pageContext\n\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <section className=\"page-section\">\n        <div className=\"container\">\n          <article className={blogPostStyles.article}>\n            <header>\n              <h1>{post.frontmatter.title}</h1>\n              <small>{post.frontmatter.date}</small>\n            </header>\n            <section dangerouslySetInnerHTML={{ __html: post.html }} />\n            <div className={blogPostStyles.cta}>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://twitter.com/intent/tweet?text=${post.frontmatter.title} by @${social.twitter}&url=https://danilo-delbusso.github.io/blog/${post.fields.slug}`}\n              >\n                Share on Twitter\n              </a>\n              <a\n                href={`https://github.com/${GITHUB_USERNAME}/${REPO_NAME}/edit/master/content/blog/${post.fields.slug}/index.md`}\n              >\n                Edit on Github\n              </a>\n            </div>\n            <hr className={blogPostStyles.hr} />\n            <footer>\n              <Bio />\n            </footer>\n          </article>\n        </div>\n\n        <nav className=\"container\">\n          <ul className={blogPostStyles.navList}>\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </section>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        social {\n          twitter\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"blog-post-module--article--3y2Un\",\"cta\":\"blog-post-module--cta--3mv8k\",\"hr\":\"blog-post-module--hr--HHCtO\",\"navList\":\"blog-post-module--navList--3dC2i\"};"],"sourceRoot":""}